#!/bin/sh

# Slackware build script for compiz

# Copyright 2012 James Geboski <jgeboski@gmail.com>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=compiz
BUILD=${BUILD:-1}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/compiz-build}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

version_get()
{
  ver=$(ls -1 $CWD/${1}-?.*.tar.bz2 | tail -1)
  echo $ver | rev | cut -d- -f1 | cut -d. -f3- | rev
}

PKGNAM[0]=$PRGNAM
PKGVER[0]=$(version_get ${PKGNAM[0]})

PKGNAM[1]=emerald
PKGVER[1]=$(version_get ${PKGNAM[1]})

PKGNAM[2]=emerald-themes
PKGVER[2]=$(version_get ${PKGNAM[2]})

VERSION=${PKGVER[0]}
CMAKE_VER=$(cmake --version | cut -d ' ' -f3 | cut -d. -f-2)

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP

rm -rf \
  ${PKGNAM[0]}-${PKGVER[0]} \
  ${PKGNAM[1]}-${PKGVER[1]} \
  ${PKGNAM[2]}-${PKGVER[2]}

tar xvf $CWD/${PKGNAM[0]}-${PKGVER[0]}.tar.bz2
tar xvf $CWD/${PKGNAM[1]}-${PKGVER[1]}.tar.bz2
tar xvf $CWD/${PKGNAM[2]}-${PKGVER[2]}.tar.bz2

chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

cd $TMP/${PKGNAM[0]}-${PKGVER[0]}
mkdir -p $PKG/usr/share/cmake-$CMAKE_VER/Modules

if [ -n $LIBDIRSUFFIX ]; then
  sed -i \
    "s,\(CMAKE_INSTALL_PREFIX\}/lib\),\1${LIBDIRSUFFIX}," \
   compizconfig/gsettings/gsettings_backend_shared/CMakeLists.txt \
   compizconfig/libcompizconfig/cmake/LibCompizConfigCommon.cmake
fi

mkdir -p build
cd build
  # GTK is disabled due to compile-time issue, using emerald for now

  cmake \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DLIB_SUFFIX=${LIBDIRSUFFIX} \
    -DMAN_INSTALL_DIR=/usr/man \
    -DCMAKE_BUILD_TYPE=Release \
    -DCOMPIZ_DISABLE_SCHEMAS_INSTALL=FALSE \
    -DCOMPIZ_PACKAGING_ENABLED=TRUE \
    -DCOMPIZ_WERROR=FALSE \
    -DUSE_GCONF=FALSE \
    -DUSE_GTK=FALSE ..

  make
  make install DESTDIR=$PKG

  rm -rf $PKG/usr/share/gconf
cd ..


cd $TMP/${PKGNAM[1]}-${PKGVER[1]}

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
LDFLAGS="-L/usr/lib${LIBDIRSUFFIX} -ldl -lm" \
PKG_CONFIG_PATH="/usr/lib${LIBDIRSUFFIX}/pkgconfig" \
./autogen.sh \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --mandir=/usr/man \
  --docdir=/usr/doc/$PRGNAM-$VERSION/${PKGNAM[1]}-${PKGVER[1]} \
  --build=$ARCH-slackware-linux \
  -enable-static=no

make
make install DESTDIR=$PKG


cd $TMP/${PKGNAM[2]}-${PKGVER[2]}

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./autogen.sh \
  --prefix=/usr \
  --docdir=/usr/doc/${PKGNAM[2]}-${PKGVER[2]} \
  --build=$ARCH-slackware-linux

make
make install DESTDIR=$PKG


for i in $(seq 0 2); do
  mkdir -p $PKG/usr/doc/${PKGNAM[$i]}-${PKGVER[$i]}

  cp -a \
    AUTHORS ChangeLog COPYING* INSTALL NEWS README \
   $PKG/usr/doc/${PKGNAM[$i]}-${PKGVER[$i]}
done

find $PKG/usr/share/cmake-$CMAKE_VER -type f -name '*.cmake' -exec \
  mv {} $PKG/usr/share/cmake-$CMAKE_VER/Modules \;

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
