#!/bin/sh

# Slackware build script for icedtea
# Copyright 2012 James Geboski <jgeboski@gmail.com>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=openjdk
VERSION=${VERSION:-7u9_b30}
BUILD=${BUILD:-1}
NUMJOBS=${NUMJOBS:-8}

PKGNAM[0]=icedtea
PKGVER[0]=${ICEDTEA_VERSION:-2.3.3}

PKGNAM[1]=icedtea-web
PKGVER[1]=${ICEDTEA_WEB_VERSION:-1.3}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/$PRGNAM-build}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
  JAVA_ARCH="i386"
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
  JAVA_ARCH="i386"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
  JAVA_ARCH="amd64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
  JAVA_ARCH=$ARCH
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP

rm -rf \
  ${PKGNAM[0]}-${PKGVER[0]} \
  ${PKGNAM[1]}-${PKGVER[1]}

tar xvf $CWD/${PKGNAM[0]}-${PKGVER[0]}.tar.gz

if [ -e $CWD/${PKGNAM[1]}-${PKGVER[1]}.tar.gz ]; then
  tar xvf $CWD/${PKGNAM[1]}-${PKGVER[1]}.tar.gz
fi

chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

cd ${PKGNAM[0]}-${PKGVER[0]}

SOURCES=$TMP/${PKGNAM[0]}-sources-${PKGVER[0]}

mkdir -p \
  $PKG/etc/profile.d \
  $PKG/usr/doc/$PRGNAM-$VERSION/${PKGNAM[0]}-${PKGVER[0]} \
  $PKG/usr/lib${LIBDIRSUFFIX} \
  $PKG/usr/man \
  $PKG/usr/share/applications \
  $PKG/usr/share/icons/hicolor/{16x16,24x24,32x32,48x48}/apps \
  $SOURCES

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --build=$ARCH-slackware-linux \
  --disable-docs \
  --enable-nss \
  --with-jdk-home=/usr/lib${LIBDIRSUFFIX}/java \
  --with-parallel-jobs=$NUMJOBS

make \
  CORBA_SRC_ZIP=$SOURCES/corba.tar.gz \
  HOTSPOT_SRC_ZIP=$SOURCES/hotspot.tar.gz \
  JAXP_SRC_ZIP=$SOURCES/jaxp.tar.gz \
  JAXWS_SRC_ZIP=$SOURCES/jaxws.tar.gz \
  JDK_SRC_ZIP=$SOURCES/jdk.tar.gz \
  LANGTOOLS_SRC_ZIP=$SOURCES/langtools.tar.gz \
  OPENJDK_SRC_ZIP=$SOURCES/openjdk.tar.gz

cp -a openjdk.build/j2sdk-image          $PKG/usr/lib${LIBDIRSUFFIX}/java
cp -a openjdk.build/j2sdk-image/man/man1 $PKG/usr/man

install -m 644 *.desktop                       $PKG/usr/share/applications
install -m 755 $CWD/profile.d/openjdk.{csh,sh} $PKG/etc/profile.d

for size in 16 24 32 48; do
  install -m 644 \
    openjdk/jdk/src/solaris/classes/sun/awt/X11/java-icon${size}.png \
   $PKG/usr/share/icons/hicolor/${size}x${size}/apps/java.png
done

mkdir certs
cd certs
  find /usr/share/ca-certificates -type f -name '*.crt' \
    -exec openssl x509 -text -in {} \; > certs.crt

  perl $CWD/generate-cacerts.pl $PKG/usr/lib64/java/bin/keytool certs.crt
  install -m 644 cacerts $PKG/usr/lib${LIBDIRSUFFIX}/java/jre/lib/security
cd -

cp -a \
  openjdk/{ASSEMBLY_EXCEPTION,LICENSE,README,THIRD_PARTY_README} \
 $PKG/usr/doc/$PRGNAM-$VERSION

cp -a \
  AUTHORS ChangeLog COPYING HACKING INSTALL NEWS README THANKYOU \
 $PKG/usr/doc/$PRGNAM-$VERSION/${PKGNAM[0]}-${PKGVER[0]}

if pkg-config --exists seamonkey-plugin; then
  MOZILLA_PLUGIN=seamonkey-plugin
fi

if [ -n "$MOZILLA_PLUGIN" -a -d "$TMP/${PKGNAM[1]}-${PKGVER[1]}" ]; then
  mkdir -p \
    $PKG/usr/doc/$PRGNAM-$VERSION/${PKGNAM[1]}-${PKGVER[1]} \
    $PKG/usr/share/icedtea-web

  cd $TMP/${PKGNAM[1]}-${PKGVER[1]}

  CFLAGS="$SLKCFLAGS" \
  CXXFLAGS="$SLKCFLAGS" \
  MOZILLA_CFLAGS=$(pkg-config --cflags $MOZILLA_PLUGIN) \
  MOZILLA_LIBS=$(pkg-config --cflags $MOZILLA_PLUGIN) \
  ./configure \
    --prefix=/usr \
    --libdir=/usr/lib${LIBDIRSUFFIX}/mozilla/plugins \
    --mandir=/usr/man \
    --build=$ARCH-slackware-linux \
    --disable-docs \
    --with-gtk=2 \
    --with-jdk-home=$PKG/usr/lib${LIBDIRSUFFIX}/java \
    --with-jre-home=$PKG/usr/lib${LIBDIRSUFFIX}/java/jre

  JAVA_HOME=/usr/lib${LIBDIRSUFFIX}/java/jre

  sed -i \
    "s,\(-DICEDTEA_WEB_JRE=\"\).*\(\" .*\),\1\\\\\"$JAVA_HOME\\\\\"\2," \
   Makefile

  make -j$NUMJOBS
  make install DESTDIR=$PKG

  install -m 644 itweb-settings.desktop $PKG/usr/share/applications

  sed -i "s,^\(JAVA=\).*,\1java," $PKG/usr/bin/itweb-settings
  sed -i "s/javaws/java/" $PKG/usr/share/applications/itweb-settings.desktop

  cp -a \
    AUTHORS ChangeLog COPYING INSTALL NEWS README \
   $PKG/usr/doc/$PRGNAM-$VERSION/${PKGNAM[1]}-${PKGVER[1]}
fi

rm -rf $PKG/usr/lib${LIBDIRSUFFIX}/java/{,jre}/man

sed -i \
  "s,\(nssLibraryDirectory = \).*,\1/usr/lib${LIBDIRSUFFIX}/seamonkey," \
 $PKG/usr/lib${LIBDIRSUFFIX}/java/jre/lib/security/nss.cfg

sed -i "s,/usr/bin/,,"      $PKG/usr/share/applications/*.desktop
sed -i "s/javaws.png/java/" $PKG/usr/share/applications/javaws.desktop

cat > $PKG/etc/profile.d/$PRGNAM.csh <<EOF
#!/bin/csh
setenv JAVA_HOME /usr/lib${LIBDIRSUFFIX}/java
setenv PATH \${PATH}:\${JAVA_HOME}/bin:\${JAVA_HOME}/jre/bin
setenv LD_LIBRARY_PATH \${LD_LIBRARY_PATH}:/usr/lib${LIBDIRSUFFIX}/java/jre/lib/$JAVA_ARCH
EOF

cat > $PKG/etc/profile.d/$PRGNAM.sh <<EOF
#!/bin/sh
export JAVA_HOME=/usr/lib${LIBDIRSUFFIX}/java
export PATH="\${PATH}:\${JAVA_HOME}/bin:\${JAVA_HOME}/jre/bin"
export LD_LIBRARY_PATH="\${LD_LIBRARY_PATH}:/usr/lib${LIBDIRSUFFIX}/java/jre/lib/$JAVA_ARCH"
EOF

chmod a+x $PKG/etc/profile.d/$PRGNAM.{csh,sh}

# /extra/source/java/java.SlackBuild
cd $PKG/usr/lib${LIBDIRSUFFIX}
  ln -sf java/jre/lib/$JAVA_ARCH/server/libjvm.so .
cd -

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD.${PKGTYPE:-tgz}
